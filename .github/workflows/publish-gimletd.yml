name: üöÄ Publish GimletD

on:
  push:
    tags:
      - 'gimletd-v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - name: üõë Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.19
    - name: ‚¨áÔ∏è Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 5
    - name: Version
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]
        then
            tag=${GITHUB_REF##refs/tags/}
            v=${tag##gimletd-}
            echo "::set-output name=version::$v"
        else
            echo "::set-output name=version::$GITHUB_SHA"
        fi
    - name: Dist
      run: make dist-gimletd
      env:
        VERSION: ${{ steps.version.outputs.version }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: GimletD ${{ steps.version.outputs.version }}
        draft: false
        prerelease: false
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.PAT }} # `PAT` is a secret that contains your Personal Access Token with `write:packages` scope
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: docker/gimletd/Dockerfile
        platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
        push: true
        tags: |
          ghcr.io/gimlet-io/gimletd:${{ steps.version.outputs.version }}
