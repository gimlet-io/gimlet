name: publish

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - name: üõë Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - name: ‚¨áÔ∏è Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 5
    - id: get_version
      uses: battila7/get-version-action@v2
    - name: Version is sha or tag
      id: sha_or_tag
      run: |
        echo "::set-output name=version::$VERSION"
        if [[ $VERSION == refs/heads/* ]]
        then
            echo "::set-output name=version::$GITHUB_SHA"
        fi
      env:
        VERSION: ${{ steps.get_version.outputs.version-without-v }}
    - name: üèóÔ∏è Build chart configure frontend
      run: make build-cli-frontend
    - name: üèóÔ∏è Build stack frontend
      run: make build-stack-frontend
    - name: Dist
      run: make dist-cli
      env:
        VERSION: ${{ steps.sha_or_tag.outputs.version }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: üöÄ Upload release binaries
      uses: alexellis/upload-assets@0.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        asset_paths: '["./bin/gimlet*"]'

    - name: Update README on main branch with new version
      env:
        VERSION: ${{ steps.sha_or_tag.outputs.version }}
      run: |
       git config --global user.email "action@github.com"
       git config --global user.name "Github Action"
       git checkout main
       sed -i "s/v[0-9]\.[0-9]\.[0-9]\+/v${VERSION}/" README.md
       git commit -am "Update README with ${VERSION}"
       git push origin main
