name: Tip
on:
  push:
    branches:
      - 'main'

jobs:
  cli:
    name: Build CLI
    runs-on: ubuntu-latest
    steps:
    - name: üõë Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - name: ‚¨áÔ∏è Check out code into the Go module directory
      uses: actions/checkout@v1
      with:
        fetch-depth: 5
    - id: get_version
      uses: battila7/get-version-action@v2
    - name: Version is sha or tag
      id: sha_or_tag
      run: |
        if [[ $VERSION == refs/heads/* ]]
        then
            echo "::set-output name=version::$GITHUB_SHA"
        fi
      env:
        VERSION: ${{ steps.get_version.outputs.version-without-v }}
    - name: üèóÔ∏è Build chart configure frontend
      run: make build-cli-frontend
    - name: üèóÔ∏è Build stack frontend
      run: make build-stack-frontend
    - name: Dist
      run: make fast-dist-cli
      env:
        VERSION: ${{ steps.sha_or_tag.outputs.version }}
    - name: üöÄ tip
      uses: eine/tip@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        rm: true
        files: |
          bin/*

  gimletd:
    name: Build GimletD
    runs-on: ubuntu-latest
    steps:
    - name: üõë Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - name: ‚¨áÔ∏è Check out code into the Go module directory
      uses: actions/checkout@v1
      with:
        fetch-depth: 5
    - id: get_version
      uses: battila7/get-version-action@v2
    - name: Version is sha or tag
      id: sha_or_tag
      run: |
        if [[ $VERSION == refs/heads/* ]]
        then
            echo "::set-output name=version::$GITHUB_SHA"
        fi
      env:
        VERSION: ${{ steps.get_version.outputs.version-without-v }}
    - name: Dist
      run: make dist-gimletd
      env:
        VERSION: ${{ steps.sha_or_tag.outputs.version }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.PAT }} # `PAT` is a secret that contains your Personal Access Token with `write:packages` scope
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: docker/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ghcr.io/gimlet-io/gimletd:latest
